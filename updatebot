#!/usr/bin/env python
# 
# Copyright (c) 2017 Matt Behrens.
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject
# to the following conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR
# ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

import configparser
import datetime
import mastodon
import pytz 
import random

from config import read_config

def get_local_hour(config):
    timezone_name = config['updates']['timezone']
    timezone = pytz.timezone(timezone_name)
    now = datetime.datetime.now(timezone)
    return now.hour

def select_adjective(config):
    with open(config['updates']['adjectives']) as f:
        adjectives = [adjective.strip() for adjective in f.readlines()]

    return random.choice(adjectives)

def get_feeling(config):
    return config['updates']['feeling']

def generate_preamble(local_hour):
    preamble = random.choice([
        'I don\'t know about you, but'
        'I need to tell you this:'
        'It\'s {} o\'clock, and',
        'Just so you know,',
        'On this day,',
        'Today,',
        'Your {}:00 update:',
        'Wowâ€¦'])
    return preamble.format(local_hour % 12)

def format_post(preamble, adjective, feeling):
    return '{} I\'m feeling {} {}.'.format(preamble, adjective, feeling)

def toot(config, post):
    client_config = config['client']
    client = mastodon.Mastodon(client_id=client_config['clientcred_file'],
            access_token=client_config['usercred_file'],
            api_base_url=client_config['api_base_url'])
    client.toot(post)

config = read_config()
local_hour = get_local_hour(config)

if local_hour == config['updates'].getint('hour'):
    adjective = select_adjective(config)
    feeling = get_feeling(config)
    preamble = generate_preamble(local_hour)
    post = format_post(preamble, adjective, feeling)
    toot(config, post)

